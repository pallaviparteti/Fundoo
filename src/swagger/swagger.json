{
  "swagger": "2.0",
  "info": {
    "version": "V1",
    "title": "Node jS Project",
    "description": "FUNDOO NOTES, project contain all apis for the users to resister login and Note crud api"
  },
  "host": "localhost:3101",
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "API's for User and Notes Using express CLI",
      "description": "API for user registration"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "description": "Add new User to the Collection",
        "parameters": [
          {
            "name": "Register new User",
            "in": "body",
            "description": "User will register",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "400": {
            "description": "user is already exist"
          },
          "201": {
            "description": "user registered successfully"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "description": "Authenticate the user using login credentials",
        "parameters": [
          {
            "name": "User Login",
            "in": "body",
            "description": "User will login successfully",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "user logged in successfully"
          },
          "400": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/users/forgetPassword": {
      "post": {
        "tags": ["User"],
        "description": "forget password for the registerd user",
        "parameters": [
          {
            "name": "Forget Password",
            "in": "body",
            "desciption": "Registered user can forget password using registered mail",
            "required": "false",
            "schema": {
              "$ref": "#/definitions/ForgetPassword"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Email has been send to registered user"
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    },
    "/users/resetPassword": {
      "post": {
        "tags": ["User"],
        "description": "reset password for the registerd user",
        "parameters": [
          {
            "name": "Reset Password",
            "in": "body",
            "required": "true",
            "desciption": "Registered user can reset password using registered mail",
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Password has been changed successfully"
          },
          "400": {
            "description": "Invalid User"
          }
        },
        "security": [
          {
            "BearerAuth": {
              "$ref": "#/securityDefinitions"
            }
          }
        ]
      }
    },
    "/notes": {
      "post": {
        "tags": ["Notes"],
        "description": "Create a note for the user",
        "parameters": [
          {
            "name": "Create Note For User",
            "in": "body",
            "required": "true",
            "description": "Authorized user can create notes",
            "schema": {
              "$ref": "#/definitions/CreateNote"
            }
          }
        ],
        "produces": [],
        "responses": {
          "201": {
            "description": "Note created successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": {
              "$ref": "#/securityDefinitions"
            }
          }
        ]
      },
      "get": {
        "tags": ["Notes"],
        "description": "Gell all notes for the valid user",
        "parameters": [
          {
            "name": "GetAll NoteS For User",
            "in": "path",
            "required": "true",
            "description": "Authorized user can get all notes for the specific user"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Note fetched successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": {
              "$ref": "#/securityDefinitions"
            }
          }
        ]
      }
    },
    "notes/{_id}": {
      "delete": {
        "tags": ["Notes"],
        "description": "Delete Note by Id ",
        "parameters": [
          {
            "name": "Delete note",
            "in": "path",
            "required": true,
            "description": "Delete Note by Id ",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Note deleted Successfull"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": {
              "$ref": "#/securityDefinitions"
            }
          }
        ]
      },
      "put": {
        "tags": ["Notes"],
        "description": "Update Note by ID",
        "parameters": [
          {
            "name": "Update Note",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Update Note",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateNote"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Note updated Successfull"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": {
              "$ref": "#/securityDefinitions"
            }
          }
        ]
    }
    },
        "/notes{id}/archive/": {
          "put": {
            "tags": ["Notes"],
            "description": "Archive and unArchive Notes by ID",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": {
                "description": "Note archived or unarchived Successfully"
              },
              "400": {
                "description": "Bad Request"
              },
              "500": {
                "description": "Internal server error"
              }
            },
            "security": [
              {
                "BearerAuth": {
                  "$ref": "#/securityDefinitions"
                }
              }
            ]
          }
        },
        "/notes{id}/trash": {
          "put": {
            "tags": ["Notes"],
            "description": "Trash a Note by ID...",
            "parameters": [
              {
                "name": "Trash Notes",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": {
                "description": "Note trashed successfully"
              },
              "400": {
                "description": "Bad Request"
              },
              "500": {
                "description": "Internal server error"
              }
            },
            "security": [
              {
                "BearerAuth": {
                  "$ref": "#/securityDefinitions"
                }
              }
            ]
          }
        }
      },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ForgetPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ResetPassword": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "CreateNote": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization"
    }
  }
}
